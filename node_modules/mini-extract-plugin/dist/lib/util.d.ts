import type { Constructor, AnyFunc } from '../types/util';
export declare const isIterOfIter: <T>(m: T) => boolean;
export declare function isIterable<T>(obj: T): boolean;
export declare function enumerate<T>(iter: Iterable<T>): Generator<[number, T], void, unknown>;
export declare function renameClass(klass: Constructor<any>, newName: string): void;
export declare function lastItem<T>(arr: T[]): T;
export declare function exposedPromise(name: string): {
    name: string;
    resolve: AnyFunc | null;
    reject: AnyFunc | null;
    promise: Promise<any> | null;
};
