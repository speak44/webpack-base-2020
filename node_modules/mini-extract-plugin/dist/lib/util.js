"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.isIterOfIter = (m) => {
    if (!isIterable(m))
        return false;
    for (const val of m) {
        if (!isIterable(val))
            return false;
    }
    return true;
};
function isIterable(obj) {
    if (obj == null)
        return false;
    return typeof obj[Symbol.iterator] === 'function';
}
exports.isIterable = isIterable;
function* enumerate(iter) {
    let index = 0;
    for (const item of iter) {
        yield [index++, item];
    }
}
exports.enumerate = enumerate;
function renameClass(klass, newName) {
    const classAsString = klass
        .toString()
        .replace(new RegExp(klass.name, 'gu'), newName);
    Object.defineProperties(klass, {
        name: {
            get: () => newName,
        },
        toString: {
            get: () => function toString() {
                return classAsString;
            },
        },
    });
}
exports.renameClass = renameClass;
function lastItem(arr) {
    return arr[arr.length - 1];
}
exports.lastItem = lastItem;
function exposedPromise(name) {
    const resolver = {
        name,
        resolve: null,
        reject: null,
        promise: null,
    };
    resolver.promise = new Promise((resolve, reject) => {
        resolver.resolve = () => resolve();
        resolver.reject = () => reject();
    });
    return resolver;
}
exports.exposedPromise = exposedPromise;
