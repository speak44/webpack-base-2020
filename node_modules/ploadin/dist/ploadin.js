"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const lodash_clonedeep_1 = __importDefault(require("lodash.clonedeep"));
const provider_1 = __importDefault(require("./lib/provider"));
const debug_1 = __importDefault(require("./lib/debug"));
const loaderPath = require.resolve('./loader');
function getLoaderObject({ classId, instanceId }) {
    return {
        loader: loaderPath,
        query: { classId, instanceId },
    };
}
class Ploadin {
    constructor() {
        provider_1.default.addInstance(this);
    }
    get _instanceId() {
        return provider_1.default.getInstanceId(this);
    }
    static get _classId() {
        return provider_1.default.getClassId(this);
    }
    get _classId() {
        return provider_1.default.getClassId(this);
    }
    static get asLoader() {
        return getLoaderObject({
            classId: this._classId,
            instanceId: undefined,
        });
    }
    get asLoader() {
        return getLoaderObject({
            classId: this._classId,
            instanceId: this._instanceId,
        });
    }
    get classOptions() {
        return lodash_clonedeep_1.default(provider_1.default.getClassOptions(this));
    }
}
exports.Ploadin = Ploadin;
provider_1.default.addClass(Ploadin);
function registerSubclass(subclass, options) {
    debug_1.default(`Registering Ploadin class ${subclass.name}`);
    const res = provider_1.default.addClass(subclass, options);
    return typeof res === 'number';
}
exports.registerSubclass = registerSubclass;
